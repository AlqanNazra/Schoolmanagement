// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SchoolManagementSystem.Configurations.AppDbContext;

#nullable disable

namespace SchoolManagementSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250704054256_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SchoolManagementSystem.Modules.Classes.Entities.Kelas", b =>
                {
                    b.Property<int>("id_kelas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_kelas"));

                    b.Property<int?>("Pendaftaranid_enrollment")
                        .HasColumnType("integer");

                    b.Property<string>("deskripsi_kelas")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nama_kelas")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_kelas");

                    b.HasIndex("Pendaftaranid_enrollment");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("SchoolManagementSystem.Modules.Enrollments.Entities.Pendaftaran", b =>
                {
                    b.Property<int>("id_enrollment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_enrollment"));

                    b.Property<int>("daftar_kelas")
                        .HasColumnType("integer");

                    b.Property<int>("id_kelas")
                        .HasColumnType("integer");

                    b.Property<int>("id_student")
                        .HasColumnType("integer");

                    b.HasKey("id_enrollment");

                    b.HasIndex("id_kelas");

                    b.HasIndex("id_student", "id_kelas")
                        .IsUnique();

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("SchoolManagementSystem.Modules.Students.Entities.Murid", b =>
                {
                    b.Property<int>("id_student")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_student"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("id_enrollment")
                        .HasColumnType("integer");

                    b.Property<string>("nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("waktu_registrasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_student");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolManagementSystem.Modules.Teachers.Entities.Guru", b =>
                {
                    b.Property<int>("id_teacher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_teacher"));

                    b.Property<string>("bidang")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email_teacher")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("id_kelas")
                        .HasColumnType("integer");

                    b.Property<string>("nama_teacher")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_teacher");

                    b.HasIndex("email_teacher")
                        .IsUnique();

                    b.HasIndex("id_kelas");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SchoolManagementSystem.Modules.Classes.Entities.Kelas", b =>
                {
                    b.HasOne("SchoolManagementSystem.Modules.Enrollments.Entities.Pendaftaran", null)
                        .WithMany("Classes")
                        .HasForeignKey("Pendaftaranid_enrollment");
                });

            modelBuilder.Entity("SchoolManagementSystem.Modules.Enrollments.Entities.Pendaftaran", b =>
                {
                    b.HasOne("SchoolManagementSystem.Modules.Classes.Entities.Kelas", "Kelas")
                        .WithMany("Enrollments")
                        .HasForeignKey("id_kelas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolManagementSystem.Modules.Students.Entities.Murid", "Murid")
                        .WithMany("Enrollments")
                        .HasForeignKey("id_student")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kelas");

                    b.Navigation("Murid");
                });

            modelBuilder.Entity("SchoolManagementSystem.Modules.Teachers.Entities.Guru", b =>
                {
                    b.HasOne("SchoolManagementSystem.Modules.Classes.Entities.Kelas", "Kelas")
                        .WithMany("Teachers")
                        .HasForeignKey("id_kelas")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kelas");
                });

            modelBuilder.Entity("SchoolManagementSystem.Modules.Classes.Entities.Kelas", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("SchoolManagementSystem.Modules.Enrollments.Entities.Pendaftaran", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("SchoolManagementSystem.Modules.Students.Entities.Murid", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
